use proto::{
    challenge_data_patch_action::Action, Challenge, ChallengeDataPatch, ChallengePatch,
    CreateChallenge,
};

/// Code generated by tonic from the protobuf definitions
pub mod proto {
    pub const FILE_DESCRIPTOR_SET: &[u8] =
        tonic::include_file_descriptor_set!("rhombus_descriptor");
    // tonic::include_proto!("rhombus");
    include!("./rhombus.rs");
}

pub trait ChallengeDataPatchExt {
    fn create_challenges(&self) -> impl Iterator<Item = (&str, &Challenge)>;
}

impl ChallengeDataPatchExt for ChallengeDataPatch {
    fn create_challenges(&self) -> impl Iterator<Item = (&str, &Challenge)> {
        self.actions.iter().filter_map(|a| match &a.action {
            Some(Action::CreateChallenge(CreateChallenge {
                id,
                value: Some(challenge),
            })) => Some((id.as_str(), challenge)),
            _ => None,
        })
    }
}
