/*
 * rhombus_api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChallengeData {
    #[serde(rename = "authors")]
    pub authors: std::collections::HashMap<String, models::Author>,
    #[serde(rename = "categories")]
    pub categories: std::collections::HashMap<String, models::Category>,
    #[serde(rename = "challenges")]
    pub challenges: std::collections::HashMap<String, models::Challenge>,
}

impl ChallengeData {
    pub fn new(authors: std::collections::HashMap<String, models::Author>, categories: std::collections::HashMap<String, models::Category>, challenges: std::collections::HashMap<String, models::Challenge>) -> ChallengeData {
        ChallengeData {
            authors,
            categories,
            challenges,
        }
    }
}

