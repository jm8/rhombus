/*
 * rhombus_api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuthorPatch {
    #[serde(rename = "avatar_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub avatar_url: Option<Option<Box<models::PatchForString>>>,
    #[serde(rename = "discord_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub discord_id: Option<Option<Box<models::PatchForString>>>,
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<Box<models::PatchForString>>>,
}

impl AuthorPatch {
    pub fn new() -> AuthorPatch {
        AuthorPatch {
            avatar_url: None,
            discord_id: None,
            name: None,
        }
    }
}

