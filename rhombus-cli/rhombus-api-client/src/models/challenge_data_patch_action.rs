/*
 * rhombus_api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ChallengeDataPatchAction {
    ChallengeDataPatchActionOneOf(Box<models::ChallengeDataPatchActionOneOf>),
    ChallengeDataPatchActionOneOf1(Box<models::ChallengeDataPatchActionOneOf1>),
    ChallengeDataPatchActionOneOf2(Box<models::ChallengeDataPatchActionOneOf2>),
    ChallengeDataPatchActionOneOf3(Box<models::ChallengeDataPatchActionOneOf3>),
    ChallengeDataPatchActionOneOf4(Box<models::ChallengeDataPatchActionOneOf4>),
    ChallengeDataPatchActionOneOf5(Box<models::ChallengeDataPatchActionOneOf5>),
    ChallengeDataPatchActionOneOf6(Box<models::ChallengeDataPatchActionOneOf6>),
    ChallengeDataPatchActionOneOf7(Box<models::ChallengeDataPatchActionOneOf7>),
    ChallengeDataPatchActionOneOf8(Box<models::ChallengeDataPatchActionOneOf8>),
}

impl Default for ChallengeDataPatchAction {
    fn default() -> Self {
        Self::ChallengeDataPatchActionOneOf(Default::default())
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "patch_challenge")]
    PatchChallenge,
    #[serde(rename = "delete_challenge")]
    DeleteChallenge,
    #[serde(rename = "create_challenge")]
    CreateChallenge,
    #[serde(rename = "patch_author")]
    PatchAuthor,
    #[serde(rename = "delete_author")]
    DeleteAuthor,
    #[serde(rename = "create_author")]
    CreateAuthor,
    #[serde(rename = "patch_category")]
    PatchCategory,
    #[serde(rename = "delete_category")]
    DeleteCategory,
    #[serde(rename = "create_category")]
    CreateCategory,
}

impl Default for Type {
    fn default() -> Type {
        Self::PatchChallenge
    }
}

